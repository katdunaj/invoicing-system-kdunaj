plugins {
    id 'java'
    id 'application'
    id 'groovy'
    id 'checkstyle'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenCentral()
}

dependencies {
    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'org.spockframework:spock-spring:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'

    testCompileOnly 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

application {
    // Define the main class for the application.
    mainClass = 'pl.futurecollars.invoicing.app.App'
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.01
            }
        }
    }
}